[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pyupsrs"
version = "0.1.0"
description = "A DICOMWeb UPS-RS server implementation using Falcon"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
dependencies = [
    "falcon>=3.1.0",
    "uvicorn>=0.22.0",
    "websockets>=11.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pre-commit>=4.2.0",
    "autoflake>=2.3.1",
    "pydicom>=2.4.4",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.0.272",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
]

[tool.hatch.build.targets.wheel]
packages = ["pyupsrs"]

[tool.hatch.build.targets.sdist]
include = [
    "pyupsrs",
    "tests",
    "README.md",
    "pyproject.toml",
]

[project.scripts]
pyupsrs = "pyupsrs.app:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.ruff]
line-length = 127
target-version = "py311"
lint.select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "ANN", # flake8-annotations
]
lint.ignore = [
    "D203",  # one-blank-line-before-class
    "D212",  # multi-line-summary-first-line
    "E203",  # whitespace before ':'
]

[tool.ruff.lint.isort]
known-first-party = ["pyupsrs"]

[tool.ruff.format]
quote-style = "double"
line-ending = "auto"
indent-style = "space"
