[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pyupsrs"
version = "0.1.0"
description = "A DICOMWeb UPS-RS server implementation using Falcon"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Stuart Swerdloff", email = "sjswerdloff@gmail.com"},
]
dependencies = [
    "falcon>=4.0.2",
    "uvicorn>=0.34.0",
    "websockets>=15.0.1",
    "pydicom>=3.0.1",
    "httpx>=0.28.1",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.11.4",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.1",
    "pytest-httpx>=0.29.0",
    "mypy>=1.9.0",
    "pre-commit>=4.2.0",
    "autoflake>=2.3.1",
]

docs = [
    "sphinx>=8.0",
    "sphinx-rtd-theme>=3.0.2",
    "sphinxcontrib-napoleon>=0.7",
]

[tool.hatch.build.targets.wheel]
packages = ["pyupsrs"]

[tool.hatch.build.targets.sdist]
include = [
    "pyupsrs",
    "tests",
    "README.md",
    "pyproject.toml",
]

[project.scripts]
pyupsrs = "pyupsrs.app:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.ruff]
line-length = 127
target-version = "py311"
lint.select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "ANN", # flake8-annotations
]
lint.ignore = [
    "D203",  # one-blank-line-before-class
    "D212",  # multi-line-summary-first-line
    "E203",  # whitespace before ':'
]

[tool.ruff.lint.isort]
known-first-party = ["pyupsrs"]

[tool.ruff.format]
quote-style = "double"
line-ending = "auto"
indent-style = "space"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false
